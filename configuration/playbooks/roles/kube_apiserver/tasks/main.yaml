---
- name: Install kube-apiserver binary
  block:
    #     - name: Capture etcd installed version
    #       ansible.builtin.command: "{{ etcd_target_path }}/etcd --version"
    #       register: etcd_installed
    #       ignore_errors: true
    #       changed_when: false

    #    - name: Set etcd installed version fact
    #      ansible.builtin.set_fact:
    #        etcd_installed_version: "v{{ etcd_installed.stdout_lines[0].split(' ')[2] }}"
    #      when: etcd_installed.rc == 0

    #    - name: Stop and remove existing etcd if version mismatch
    #      when: etcd_installed.rc == 0 and etcd_installed_version != etcd_version
    #      block:
    #        - name: Ensure etcd is stopped
    #          ansible.builtin.systemd_service:
    #            name: etcd
    #            state: stopped
    #          become: true
    #
    #        - name: Remove etcd target directory
    #          ansible.builtin.file:
    #            path: "{{ etcd_target_path }}"
    #            state: absent

    - name: Install kube-apiserver binary if not installed or version mismatch
      #  when: etcd_installed_version|default('') != etcd_version
      block:
        - name: Download kube-apiserver binary
          ansible.builtin.get_url:
            url: "{{ kube_apiserver_url }}/{{ kube_apiserver_version }}/bin/{{ ansible_system | lower }}/{{ architecture }}/kube-apiserver"
            dest: "{{ kube_apiserver_target_path }}"
            owner: root
            group: root
            mode: "0755"
          become: true

- name: Install and configure kube-apiserver service
  block:
    - name: Ensure service env directory exists
      ansible.builtin.file:
        path: "{{ kube_apiserver_service_env_path }}"
        state: directory
        mode: "0755"
      become: true

    - name: Create service environment file
      ansible.builtin.template:
        src: kube-apiserver.env.j2
        dest: "{{ kube_apiserver_service_env_path }}/kube-apiserver"
        mode: "0644"
      become: true
      notify: Restart kube-apiserver service

    - name: Create systemd service file
      ansible.builtin.template:
        src: kube-apiserver.service.j2
        dest: /lib/systemd/system/kube-apiserver.service
        mode: "0644"
      become: true
      notify: Restart kube-apiserver service

- name: Trigger handler immediately after service configuration
  ansible.builtin.meta: flush_handlers

- name: Wait for kube-apiserver port to become available
  ansible.builtin.wait_for:
    host: localhost
    port: 6443
    timeout: 30
