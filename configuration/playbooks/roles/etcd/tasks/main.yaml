---
- name: Check if etcd is installed
  ansible.builtin.command: "{{ etcd_target_path }}/etcd --version"
  register: etcd_installed
  ignore_errors: true
  changed_when: false

- name: Get etcd installed version
  ansible.builtin.set_fact:
    etcd_installed_version: "v{{ etcd_installed.stdout_lines[0].split(' ')[2] }}"
  when: etcd_installed.rc == 0

- name: Delete existing etcd
  when: etcd_installed.rc == 0 and etcd_installed_version != etcd_version
  block:
    - name: Ensure etcd is stopped
      ansible.builtin.systemd_service:
        name: etcd
        state: stopped
      become: true

    - name: Delete etcd target directory
      ansible.builtin.file:
        path: "{{ etcd_target_path }}"
        state: absent

- name: Install etcd
  when: etcd_installed_version|default('') != etcd_version
  block:
    - name: Download etcd archive
      ansible.builtin.get_url:
        url: "{{ etcd_github_url }}/{{ etcd_version }}/etcd-{{ etcd_version }}-{{ ansible_system }}-{{ architecture }}.tar.gz"
        dest: "{{ etcd_archive_path }}"
        mode: "0600"

    - name: Ensure etcd target directory exists
      ansible.builtin.file:
        path: "{{ etcd_target_path }}"
        state: directory
        mode: "0700"

    - name: Extract etcd archive
      ansible.builtin.unarchive:
        src: "{{ etcd_archive_path }}"
        dest: "{{ etcd_target_path }}"
        copy: false
        extra_opts: "--strip-components=1"

    - name: Delete etcd archive
      ansible.builtin.file:
        path: "{{ etcd_archive_path }}"
        state: absent

    - name: Ensure etcd data directory exists
      ansible.builtin.file:
        path: "{{ etcd_data_path }}"
        state: directory
        mode: "0700"

    - name: Create etcd service file
      ansible.builtin.template:
        src: etcd.service.j2
        dest: /etc/systemd/system/etcd.service
        mode: "0644"
      become: true
      notify: Reload systemd

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

- name: Ensure etcd is running
  ansible.builtin.systemd_service:
    name: etcd
    enabled: true
    state: started
  become: true

- name: Wait for etcd port to become available
  ansible.builtin.wait_for:
    host: localhost
    port: 2379
    timeout: 60
