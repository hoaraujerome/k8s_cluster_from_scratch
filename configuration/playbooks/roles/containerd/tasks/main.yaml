---
- name: Install CNI plugins
  ansible.builtin.include_role:
    name: cni
  vars:
    cni_plugins_target_path: "{{ containerd_cni_plugins_target_path }}"
    cni_plugins_config_path: "{{ containerd_cni_plugins_config_path }}"

- name: Install containerd binary
  block:
    - name: Capture containerd installed version
      ansible.builtin.command: "containerd --version"
      register: containerd_installed
      ignore_errors: true
      changed_when: false

    - name: Set containerd installed version fact
      ansible.builtin.set_fact:
        containerd_installed_version: "{{ containerd_installed.stdout_lines[0].split(' ')[2] }}"
      when: containerd_installed.rc == 0

    - name: Stop and remove existing containerd if version mismatch
      when: containerd_installed.rc == 0 and containerd_installed_version != containerd_version_prefixed
      block:
        - name: Ensure containerd is stopped
          ansible.builtin.systemd_service:
            name: containerd
            state: stopped
          become: true

        - name: Remove containerd target directory
          ansible.builtin.file:
            path: "{{ containerd_target_path }}"
            state: absent
          become: true

    - name: Install containerd binary if not installed or version mismatch
      when: containerd_installed_version|default('') != containerd_version_prefixed
      block:
        - name: Download containerd archive
          ansible.builtin.get_url:
            url: "{{ containerd_binaries_base_url }}/{{ containerd_binaries_tarball_path }}"
            dest: "{{ containerd_archive_path }}"
            mode: "0600"

        - name: Ensure containerd extracted archive directory exists
          ansible.builtin.file:
            path: "{{ containerd_extracted_archive_path }}"
            state: directory
            mode: "0700"

        - name: Extract containerd archive
          ansible.builtin.unarchive:
            src: "{{ containerd_archive_path }}"
            dest: "{{ containerd_extracted_archive_path }}"
            copy: false
            extra_opts: "--strip-components=1"

        - name: Copy containerd binaries
          ansible.builtin.copy:
            src: "{{ containerd_extracted_archive_path }}/"
            dest: "{{ containerd_target_path }}"
            remote_src: true
            owner: root
            group: root
            mode: "0755"
          become: true
          notify: Restart containerd service

        - name: Delete containerd extracted archive directory
          ansible.builtin.file:
            path: "{{ containerd_extracted_archive_path }}"
            state: absent

        - name: Delete containerd archive
          ansible.builtin.file:
            path: "{{ containerd_archive_path }}"
            state: absent

- name: Install and configure containerd service
  block:
    - name: Ensure config directory exists
      ansible.builtin.file:
        path: "{{ containerd_config_path }}"
        state: directory
        mode: "0755"
      become: true

    - name: Copy config file
      ansible.builtin.template:
        src: containerd-config.toml.j2
        dest: "{{ containerd_config_path }}/config.toml"
        mode: "0644"
      become: true
      notify: Restart containerd service

    - name: Create systemd service file
      ansible.builtin.template:
        src: containerd.service.j2
        dest: /lib/systemd/system/containerd.service
        mode: "0644"
      become: true
      notify: Restart containerd service

- name: Trigger handler immediately after service configuration
  ansible.builtin.meta: flush_handlers
